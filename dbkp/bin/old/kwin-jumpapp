#!/usr/bin/env fish

if test (count $argv) -lt 1 || string match -qr -- "--help" "$argv"
    printf "kwin-jumpapp window-class [command/desktop-file]\n\n"
    printf "Verifies if window-class is found by KWin and focuses it if so, "
    printf "Otherwise, tries to launch [command/desktop-file]."
    printf "Requires qdbus to work.\n"
    exit 0
end

set WINDOW $argv[1]
set APP    $argv[-1]

if qdbus --literal org.kde.KWin /WindowsRunner org.kde.krunner1.Match $WINDOW | grep -q "Activate"
    set -l script """
    const clients = workspace.clientList()
    var windows = []
    var active_idx = -1
    for (var i = 0; i < clients.length; i++) {
        const client = clients[i]
        const app = String(client.resourceClass)
        if (app.includes('$WINDOW')) {
            windows.push(client)
            if (workspace.activeClient == client) {
                active_idx = windows.length - 1
            }
        }
    }
    const index = (active_idx + 1) % windows.length
    workspace.activeClient = windows[index]
    """

    pushd /tmp
    echo $script > script.js

    set -l id (qdbus --literal org.kde.KWin /Scripting org.kde.kwin.Scripting.loadScript (pwd)/script.js)
    qdbus org.kde.KWin /$id org.kde.kwin.Script.run
    qdbus org.kde.KWin /$id org.kde.kwin.Script.stop

    rm script.js
    popd
else
    set -la SEARCH_PATH $XDG_DATA_DIRS /usr/local/share/applications
    for dir in $SEARCH_PATH
        if test -d $dir/applications && test -f $dir/applications/$APP
            dex $dir/applications/$APP &>/dev/null
            exit 0
        end
    end
    $APP &>/dev/null &
    disown %1
end
